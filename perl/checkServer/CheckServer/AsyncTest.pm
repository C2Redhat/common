##
# Base class for asynchronous checkServer tests.
#
# Any fixes generated by an AsyncTest will be applied after those provided
# by the non-asynchronous tests.
#
# Good candidates for this class are checks that take a long time to
# run, or involve waiting on resources (such as the RSVP server, or
# to some degree even local disk) while we could be doing something
# else. This needs to be balanced with the resource limitations
# (CPU, disk bandwidth) of the host, which vary across platforms; we
# can't just launch everything asynchronously and cause a load spike
# to 50 without causing new bottlenecks.
#
# $Id$
##
package CheckServer::AsyncTest;

use strict;
use warnings FATAL => qw(all);

use English qw(-no_match_vars);

use Permabit::Assertions qw(assertMinArgs);

use base qw(CheckServer::Test);

my $log = Log::Log4perl->get_logger(__PACKAGE__);

########################################################################
# Create a new test.
##
sub new {
  my ($pkg, $framework, %arguments) = assertMinArgs(2, @_);
  $pkg->SUPER::new($framework, async => 1, %arguments);
}
